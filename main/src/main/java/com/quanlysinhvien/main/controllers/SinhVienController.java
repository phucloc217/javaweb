/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.quanlysinhvien.main.controllers;

import com.quanlysinhvien.main.model.Lop;
import com.quanlysinhvien.main.model.LopRepository;
import com.quanlysinhvien.main.model.SinhVien;
import com.quanlysinhvien.main.model.SinhVienRepository;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

/**
 *
 * @author locng
 */
@Controller
public class SinhVienController {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private SinhVienRepository sinhVienRepository;
    @Autowired
    private LopRepository lopRepository;

    @RequestMapping("/sinhvien")
    public String listSinhVien(Model model) {
        List<SinhVien> ds = (List<SinhVien>) sinhVienRepository.findAll();
        List<Lop> dslop = (List<Lop>) lopRepository.findAll();
        model.addAttribute("classes", dslop);
        model.addAttribute("students", ds);
        return "sinhvienview";
    }

    @RequestMapping(value = "/addsv", method = RequestMethod.POST)
    public String saveStudent(@RequestParam String studentID, @RequestParam String studentName, @RequestParam String birthday, @RequestParam String classID,
            Model model, RedirectAttributes redirAttrs) throws ParseException {
        if (sinhVienRepository.findById(studentID) == null) {
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse(birthday);

            SinhVien sv = new SinhVien();
            sv.setMasv(studentID);
            sv.setHoten(studentName);
            sv.setNgaysinh(date);
            Lop lop = lopRepository.findById(Integer.parseInt(classID)).orElse(null);
            sv.setLop(lop);
            sinhVienRepository.save(sv);
            redirAttrs.addFlashAttribute("success", "Thêm thành công");
        }
        return "redirect:/sinhvien";
    }
    @PostMapping("/deletesv")
    public String deleteStudent(@RequestParam String studentID , RedirectAttributes redirAttrs) {
        SinhVien sv = sinhVienRepository.findById(studentID);
        sinhVienRepository.delete(sv);
        redirAttrs.addFlashAttribute("success", "Xóa thành công");
        return "redirect:/sinhvien";
    }
}
